NOT WORKING
It is possible to route the virtual machine's audio to the host as an application using libvirt. This has the advantage of multiple audio streams being routable to one host output, and working with audio output devices that do not support passthrough. PulseAudio is required for this to work.

First, remove the comment from the #user = "" line. Then add your username in the quotations. This tells QEMU which user's pulseaudio stream to route through.

/etc/libvirt/qemu.conf
user = "example"
An emulated audio setup consists of two components: An emulated sound device exposed to the guest and an audio backend connecting the sound device to the host's PulseAudio.

Of the emulated sound devices available, two are of main interest: ICH9 and usb-audio. ICH9 features both output and input but is limited to stereo. usb-audio only features audio output but supports up to 6 channels in 5.1 configuration. For ICH9 remove any pre-existing audio backend in the <devices> section and add:

Pre-existing stuff:
<sound model="ich9">
  <address type="pci" domain="0x0000" bus="0x00" slot="0x1b" function="0x0"/>
</sound>

Add stuff:
$ virsh edit vmname
    <sound model='ich9'>
      <codec type='micro'/>
      <audio id='1'/>
    </sound>
    <audio id='1' type='pulseaudio' serverName='/run/user/1000/pulse/native'/>
Note the matching id elements. The example above assumes a single-user system with user ID 1000. Use the id command to find the correct ID. You can also use the /tmp directory if you have multiple users accessing PulseAudio:

$ virsh edit vmname
    <audio id='1' type='pulseaudio' serverName='unix:/tmp/pulse-socket'/>
If you get crackling or distorted sound, try experimenting with some latency settings. The following example uses 20000 microseconds:

$ virsh edit vmname
    <audio id="1" type="pulseaudio" serverName="/run/user/1000/pulse/native">
      <input latency="20000"/>
      <output latency="20000"/>
    </audio>
You can also try disabling the software mixer included in QEMU. This should, in theory, be more efficient and allow for lower latencies since mixing will then take place on your host only:

$ virsh edit vmname
    <audio id="1" type="pulseaudio" serverName="/run/user/1000/pulse/native">
      <input mixingEngine="no"/>
      <output mixingEngine="no"/>
    </audio>
For usb-audio, the corresponding elements read

$ virsh edit vmname
    <sound model='usb'>
      <audio id='1'/>
    </sound>
    <audio id='1' type='pulseaudio' serverName='/run/user/1000/pulse/native'/>
However, if a 5.1 configuration is required the sound device needs to be configured via QEMU command line arguments:

$ virsh edit vmname
  </devices>
  <qemu:commandline>
    <qemu:arg value='-device'/>
    <qemu:arg value='usb-audio,id=sound0,audiodev=audio1,multi=on'/>
  </qemu:commandline>
</domain>
The audiodev tag has to be set to match the audio backend's id element. id='1' corresponds to audio1 and so on. See #Libvirt versions below 7.3 for further details how to directly pass QEMU arguments.

Note:
You can have multiple audio backends, by simply specifying <audio>/-audiodev multiple times in your XML and by assigning them different ids. This can be useful for a use case of having two identical backends. With PulseAudio each backend is a separate stream and can be routed to different output devices on the host (using a pulse mixer app like pavucontrol or pulsemixer).
USB 3 emulation is needed in Libvirt/QEMU to enable the usb-audio.
It is recommended to enable MSI interrupts with a tool such as [5] on the ICH9 audio device to mitigate any crackling, stuttering, speedup, or no audio at all after VM restart.
If audio is crackling/stuttering/speedup etc. is still present you may want to adjust parameters such as buffer-length and timer-period, more information on these parameters and more can be found in the qemu(1) manual.
Some audio chipsets such as Realtek alc1220 may also have issues out of the box so do consider this when using any audio emulation with QEMU.
Improper pinning or heavy host usage without using isolcpus can also influence sound bugs, especially while gaming in a VM.
